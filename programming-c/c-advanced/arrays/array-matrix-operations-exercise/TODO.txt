Exercise: Array - Matrix Operations
-------------------------------------------------------------------------------

Schreiben Sie ein C Programm, das einfache Matrix-Operationen mit Hilfe von
zweidimensionalen Integer Arrays durchführen kann. 

Gegeben sind Matrizen der Form 3x3

Implementieren sie die folgenden Operationen:

A) void matrix_print(int rows, int columns, int matrix[ROWS][COLUMNS]);
    Gibt eine Matrix auf der Konsole aus:
    Beispiele:
        A =
        [   5   6   7 ]
        [   8   9  10 ]
        [   3   1   2 ]

        B =
        [   1   2   3 ]
        [   4   5   6 ]
        [   7   8   9 ]

B) void matrix_transpose(int rows, int columns, int A[ROWS][COLUMNS], int C[ROWS][COLUMNS]);
    Diese Funktion vertauscht die Zeilen und Spalten in der Ergebnis-Matrix.
    Beispiel:
        C = transpose(A) =
        [   5   8   3 ]
        [   6   9   1 ]
        [   7  10   2 ]

C) void matrix_add(int rows, int columns, int A[ROWS][COLUMNS], 
    int B[ROWS][COLUMNS], int C[ROWS][COLUMNS]);
    Diese Funktion addiert zwei 3x3 Matrizen durch Addition ihrer 
    zugeordneten Elemente.
    Beispiel:
        C = A + B =
        [   6   8  10 ]
        [  12  14  16 ]
        [  10   9  11 ]

D) void matrix_sub(int rows, int columns, int A[ROWS][COLUMNS], 
    int B[ROWS][COLUMNS], int C[ROWS][COLUMNS]);
    Diese Funktion subtrahiert zwei 3x3 Matrizen durch Subtraktion 
    ihrer zugeordneten Elemente.
    Beispiel:    
        C = A - B =
        [   4   4   4 ]
        [   4   4   4 ]
        [  -4  -7  -7 ]

Tipp: Beachten Sie, dass eine Funktion ein Array nicht als Rückgabewert verwenden 
      kann (nur einen Pointer auf das erste Element des Arrays). Daher werden 
      Out-Parameter verwendet. Das sind Parameter die in der Funktion gesetzt werden.
